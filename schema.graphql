type DataType {
    id: ID!
    display: String!
    uuid: String!
}

type Group {
    id: ID!
    display: String!
    uuid: String!
    isPublic: Boolean!
}

type Patient {
    id: ID!
    display: String!
    uuid: String!
    privateKey: String!
    publicKey: String! 
    groups: [Group!]!
    dataTypes: [DataType!]!
    restorePhrase: String!
    passprase: String!
}

type Practioner {
    id: ID!
    display: String!
    uuid: String!
    privateKey: String!
    publicKey: String!
    groups: [Group!]!
    restorePhrase: String!
    passprase: String!
}

type Contract {
    id: ID!
    display: ID!
    uuid: String!
    clauses: [String!]!
    readerGroups: [Group!]!
    hash: String!
}

type Signature {
    id: ID!
    patientId: ID!
    contractId: ID!
    targetGroup: ID!
    expiration: Int!
    contractedSignedHash: String!
}

type ConsentEnforcement {
    id: ID!
    display: ID!
    uuid: String!
    readerGroups: [Group!]!
    targetGroups: [Group!]!
    expiration: Int!
}

type AccessToken {
    id: ID!
    uuid: String!
    patientId: ID!,
    practionerId: ID!
    expiration: Int!
}

type Mutation {
    CreateDataType(display: String!): DataType!
    CreateGroup(display: String!): Group!
    CreatePatient(display: String!, groups: [ID!]!, dataTypes: [ID!]!): Patient!
    CreatePractioner(display: String!, groups: [ID!]!): Practioner!
    CreateConsentEnforcementRule(display: String!, readerGroups: [ID!]!, targetGroups: [ID!]!, expiration: Int!): ConsentEnforcement!
    CreateContract(display: String!, clauses: [String!]!): Contract!
    GiveConsent(patientId: ID!, contractId: ID!, expiration: Int!): Signature!
    PatientResetPassphase(patientId: ID!, restorePhrase: String!): Patient!
    PractionerResetPassphase(practionerId: ID!, restorePhrase: String!): Practioner!
}

type Query {
    DataTypes(limit: Int = 25, offset: Int = 0): [DataType!]!
    PublicGroups(display: String, limit: Int = 25, offset: Int = 0): [Group!]!
    Consent(patientId: ID!, practionerId: ID!, dataTypeId: ID): AccessToken
    ConsentEnforcement(patientId: ID!, practionerId: ID!, reason: String!): AccessToken
}
