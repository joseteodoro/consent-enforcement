type DataType {
    id: ID!
    display: String!
    uuid: String!
}

type Group {
    id: ID!
    display: String!
    uuid: String!
    isPublic: Boolean!
}

type Patient {
    id: ID!
    display: String!
    uuid: User!
    privateKey: String!
    publicKey: String! 
    groups: [Group!]!
    dataTypes: [DataType!]!
    acessToken: String!
    passprase: String!
}

type Practioner {
    id: ID!
    display: String!
    uuid: User!
    privateKey: String!
    publicKey: String!
    groups: [Group!]!
    acessToken: String!
    passprase: String!
}

type Contract {
    id: ID!
    display: ID!
    uuid: String!
    clauses: [String!]!
    readerGroups: [Group!]!
    hash: String!
}

type Signature {
    id: ID!
    patientId: ID!
    contractId: ID!
    targetGroup: ID!
    expiration: Int!
    contractedSignedHash: String!
}

type ConsentEnforcement {
    id: ID!
    display: ID!
    uuid: String!
    readerGroups: [Group!]!
    targetGroups: [Group!]!
    expiration: Int!
}

type Mutation {
    createDataType(display: String!): DataType! @isAuthenticated
    createGroup(display: String!): Group! @isAuthenticated
    createPatient(display: String!, groups: [ID!]!, dataTypes: [ID!]!): Patient! @isAuthenticated
    createPractioner(display: String!, groups: [ID!]!): Practioner! @isAuthenticated
    createConsentEnforcementRule(display: String!, readerGroups: [ID!]!, targetGroups: [ID!]!, expiration: Int!): ConsentEnforcement! @isAuthenticated
    createContract(display: String!, clauses: [String!]!): Contract! @isAuthenticated
    giveConsent(patientId: ID!, contractId: ID!, expiration: Int!): Signature! @isAuthenticated
    patientResetAcessToken(patientId: ID!, passprase: String!): Patient! @isAuthenticate
    practionerResetAcessToken(practionerId: ID!, passprase: String!): Practioner! @isAuthenticate
}

type Query {
    DataTypes(limit: Int = 25, offset: Int = 0): [DataType!]!
    PublicGroups(display: String, limit: Int = 25, offset: Int = 0): [Group!]!
    consent(patientId: ID!, practionerId: ID!): Boolean
    consentEnforcement(patientId: ID!, practionerId: ID!, reason: String!): Boolean
}

directive @isAuthenticated on FIELD_DEFINITION